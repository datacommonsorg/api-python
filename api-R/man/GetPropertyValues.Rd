% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/node-core.R
\name{GetPropertyValues}
\alias{GetPropertyValues}
\title{Return property values along a property for one or more nodes}
\usage{
GetPropertyValues(dcids, prop, outgoing = TRUE, valueType = NULL,
  limit = 100)
}
\arguments{
\item{dcids}{required, vector OR single-column tibble/data frame of
string(s) that uniquely identify node(s) to get property values for.}

\item{prop}{required, string identifying the property to get the property
values for.}

\item{outgoing}{optional, boolean indicating whether the property
originates from the given node. TRUE by default.}

\item{valueType}{optional, string identifying the node type to filter the
results by. NULL by default.}

\item{limit}{optional, integer indicating the maximum number of values to
return across all properties. 100 by default.}
}
\value{
Named list or column of values associated to given dcid(s) via the
  given property and direction.
  Will be encapsulated in a named list if dcids input is vector of strings,
  or a new single column tibble if dcids input is tibble/data frame.
}
\description{
Returns all neighboring nodes of each specified node via the specified
  property and direction. The neighboring nodes are "values" for the
  property and can be leaf (primitive) nodes.
}
\examples{
# Set the dcid to be that of Santa Clara County.
sccDcid <- 'geoId/06085'
# Get the landArea value of Santa Clara (a leaf node).
landArea <- GetPropertyValues(sccDcid, 'landArea')

# Create a vector with Santa Clara and Miami-Dade County dcids
countyDcids <- c('geoId/06085', 'geoId/12086')
# Get all containing Cities.
cities <- GetPropertyValues(countyDcids, 'containedInPlace',
                            outgoing = FALSE, valueType = 'City')

# Create a data frame with Santa Clara and Miami-Dade County dcids
df <- data.frame(countyDcid = c('geoId/06085', 'geoId/12086'))
# Get all containing Cities.
df$cityDcid <- GetPropertyValues(select(df, countyDcid), 'containedInPlace',
                                 outgoing = FALSE, valueType = 'City')
}
